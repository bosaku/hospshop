{"version":3,"sources":["views/main.js","components/cptField.js","components/searchField.js","components/linkButton.js","components/info.js","views/results.js","components/procedureDescription.js","components/hospitalList.js","components/filterControl.js","components/locationField.js","serviceWorker.js","index.js","App.js"],"names":["_react","_interopRequireWildcard","__webpack_require__","_reactNativeWeb","_cptField","_interopRequireDefault","_searchField","_linkButton","Main","default","createElement","View","className","url","Component","CPTField","state","inputText","Text","TextInput","maxLength","multiline","placeholder","SearchField","LinkButton","onPress","_this","goToURL","props","Linking","canOpenURL","then","supported","openURL","console","log","Button","this","title","color","accessibilityLabel","Info","style","position","left","top","_procedureDescription","_hospitalList","_filterControl","_locationField","Results","ProcedureDescription","longName","HospitalList","LocationField","config","navigator","publicUrl","URL","process","window","location","href","origin","addEventListener","swUrl","concat","isLocalhost","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","_reactDom","_App","ReactDOM","render","document","getElementById","_reactRouterDom","_main","_info","_results","App","BrowserRouter","Switch","Route","path","exact","component","hotWrapper","Platform","OS","require","hot","module"],"mappings":"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","file":"static/js/main.0a671138.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Linking, Button, View } from \"react-native\";\nimport \"../App.css\"\nimport CPTField from \"../components/cptField\"\nimport SearchField from \"../components/searchField\"\nimport LinkButton from \"../components/linkButton\"\n//  import ProcedureDescription from \"../components/procedureDescription.js\"\n \n//  import HospitalList from \"../components/hospitalList.js\"\n//  import FilterControl from \"../components/filterControl.js/index.js\"\n\nexport default class Main extends Component{\n    render(){\n\n       \n\n        return(\n          \n            <View className=\"verticalContainer\">\n            {/* <View className=\"horizontalContainer\">  */}\n            <View > \n             \n              <CPTField/>\n              \n              <SearchField  />\n            </View>\n            <LinkButton url={\"/results\"}/>\n              \n            \n          </View>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { View, TextInput, Text } from \"react-native\";\nimport \"../App.css\";\n\nexport default class CPTField extends Component {\n  //LOOK INTO CONTROLLED INPUT as shown HERE:\n  //https://codesandbox.io/s/amazing-voice-m9pds\n\n  state = {\n    inputText: \"\"\n  };\n\n  render() {\n    return (\n      <View>\n        <Text className=\"inputFieldTitle\">Procedure Code (CPT)</Text>\n\n        <View className=\"textInputBorder\">\n          <TextInput\n            maxLength={5}\n            multiline={false}\n            // textAlign=\"center\"\n            placeholder={\"code\"}\n            className=\"inputField\"/>\n        </View>\n      </View>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { View, TextInput, Text } from \"react-native\";\nimport \"../App.css\";\n\n///Search through a google spreadsheet : https://github.com/Iwark/react-native-spreadsheet\n\nexport default class SearchField extends Component{\n    render(){\n        return(\n            <View>\n                <Text className=\"inputFieldTitle\">Procedure or Diagnosis Search</Text>\n            \n            <View className=\"textInputBorder\">\n                <TextInput placeholder=\"Procedure Search\" className=\"inputField\"></TextInput>\n            </View>\n            </View>\n        )\n    }\n}","\nimport React, { Component } from \"react\";\nimport { Linking, Button, View } from \"react-native\";\n\n// import React, \n// { Component, \n//     Button, \n//     View\n//  } from 'react';\n// import { Linking } from \"react-native\";\n//import \"../App.css\";\n\nexport default class LinkButton extends Component {\n\n     onPress = () => {\n        this.goToURL()\n      };\n  \n      goToURL = () => {\n        const { url } = this.props;\n        Linking.canOpenURL(url).then(supported => {\n          if (supported) {\n            Linking.openURL(this.props.url);\n          } else {\n            console.log(\"Don't know how to open URI: \" + this.props.url);\n          }\n        })}\n\n  render() {\n\n      return (\n          \n        <View>\n          <Button\n            onPress={this.onPress}\n            title=\"Find a hospital\"\n            color=\"#841584\"\n            accessibilityLabel=\"Click me to filter by location\"\n          />\n        </View>\n      )\n    }\n  }\n\n  \n","import React, { Component } from \"react\";\nimport {  Text, View } from \"react-native\";\nimport \"../App.css\";\n\nexport default class Info extends Component{\n    render(){\n        return(\n            <View\n            style={{\n                // display: 'flex',\n                // alignItems: 'center',\n                // justifyContent: 'center'\n                position: 'absolute',\n                left:'50%',\n                top:'50%',\n            }}\n            >\n            <Text>Info!</Text>\n            </View>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport {  View } from \"react-native\";\nimport \"../App.css\";\n// import CPTField from \"../components/cptField\";\n// import SearchField from \"../components/searchField\";\n import ProcedureDescription from \"../components/procedureDescription.js\"\n\n import HospitalList from \"../components/hospitalList.js\"\n import FilterControl from \"../components/filterControl\"\n import LocationField from \"../components/locationField\"\n\nexport default class Results extends Component {\n  render() {\n    return (\n      <View className=\"verticalContainer\">\n        <LocationField></LocationField>\n        <ProcedureDescription/>\n\n        <FilterControl />\n            <HospitalList />\n      </View>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { View, Text } from \"react-native\";\nimport \"../App.css\";\n\nexport default class ProcedureDescription extends Component{\nstate={\n    title:\"procedure short name\",\n    longName:\"procedure long description procedure long description procedure long description \"\n\n}\n\n    render(){\n        return(\n            <View className=\"procedureDescriptionContainer\"> \n                <Text className=\"procedureShortName\">{this.state.title}</Text>\n                <Text className=\"procedureDescription\">{this.state.longName}</Text>\n            </View>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport {  Text } from \"react-native\";\nimport \"../App.css\";\n\nexport default class HospitalList extends Component{\n    render(){\n        return(\n            <Text>List of Hospitals</Text>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport \"../App.css\";\n\nclass FilterControl extends Component{\n    render(){\n        return(\n            <Text>Clickable filter string</Text>\n        )\n    }\n}\n\nexport default FilterControl","import React, { Component } from \"react\";\nimport { View, TextInput, Text } from \"react-native\";\nimport \"../App.css\";\n\nexport default class LocationField extends Component {\n  //LOOK INTO CONTROLLED INPUT as shown HERE:\n  //https://codesandbox.io/s/amazing-voice-m9pds\n\n  state = {\n    inputText: \"\"\n  };\n\n  render() {\n    return (\n      <View>\n        <Text className=\"inputFieldTitle\">Location</Text>\n\n        <View className=\"textInputBorder\">\n          <TextInput\n            maxLength={5}\n            multiline={false}\n            // textAlign=\"center\"\n            placeholder={\"code\"}\n            className=\"inputField\"/>\n        </View>\n      </View>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport {  View, Platform, Text } from \"react-native\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Main from \"./views/main\";\nimport Info from \"./components/info\";\nimport Results from \"./views/results\"\n\nclass App extends Component {\n  \n\n  render() {\n    //let filterPercentage = 50;\n\n    return (\n      <View\n    \n      >\n        <View\n        >\n          <BrowserRouter>\n          <Text className=\"header\" >QUICKLY FIND MEDICAL SERVICES NEAR YOU</Text>\n            <Switch>\n              <Route path=\"/\" exact component={Main} />\n              <Route path=\"/results\" exact component={Results} />\n              <Route path=\"/info\" exact component={Info} />\n              <Route path=\"*\" component={Main}/>  {/*  misspelled routes will resolve to Main*/}\n            </Switch>\n          </BrowserRouter>\n        </View>\n      </View>\n    );\n  }\n}\n\n\nlet hotWrapper = () => () => App;\nif (Platform.OS === \"web\") {\n  const { hot } = require(\"react-hot-loader\");\n  hotWrapper = hot;\n}\nexport default hotWrapper(module)(App);\n"],"sourceRoot":""}